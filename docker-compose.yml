version: '3.3'
services:
  influx:
    image: influxdb:latest
    container_name: influx
    restart: always
    ports:
      - "8086:8086"
    volumes:
      - ./volumes/influxdb2/data:/var/lib/influxdb2
      - ./volumes/influxdb2/config:/etc/influxdb2
      - ./volumes/influxdb2/backup:/var/lib/backup
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpass
      - DOCKER_INFLUXDB_INIT_ORG=se4as
      - DOCKER_INFLUXDB_INIT_BUCKET=crypto
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token
      - DOCKER_INFLUXDB_INIT_ADMIN_USER=admin
      - DOCKER_INFLUXDB_INIT_ADMIN_PASSWORD=adminpass
      - DOCKER_INFLUXDB_HTTP_AUTH_ENABLED=true
      - DOCKER_INFLUXDB_HTTP_LOG_ENABLED=true
      - DOCKER_INFLUXDB_HTTP_WRITE_TRACING=false
      - DOCKER_INFLUXDB_INIT_NO_OVERRIDE=true


  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    restart: always
    build:
      context: ./nodered
      dockerfile: Dockerfile
    ports:
      - "1880:1880"
    volumes:
      - ./nodered:/data
      #- ./settings.js:/data/settings.js
    depends_on:
      - influx

  monitor:
    image: monitor:latest
    container_name: monitor
    restart: always
    env_file: .env
    build:
      context: ./mape/monitor
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./mape/monitor:/app
    depends_on:
      - influx
      - node-red
    environment:
      INFLUXDB_TOKEN: ${INFLUXDB_TOKEN}
      INFLUXDB_ORG: ${INFLUXDB_ORG}
      INFLUXDB_BUCKET: ${INFLUXDB_BUCKET}
      INFLUXDB_URL: ${INFLUXDB_URL}

  executor:
    image: executor:latest
    container_name: executor
    restart: always
    env_file: .env
    build:
      context: ./mape/executor
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./mape/executor:/app
    depends_on:
      - influx
      - node-red
      - planner
    environment:
      INFLUXDB_TOKEN: ${INFLUXDB_TOKEN}
      INFLUXDB_ORG: ${INFLUXDB_ORG}
      INFLUXDB_BUCKET: ${INFLUXDB_BUCKET}
      INFLUXDB_URL: ${INFLUXDB_URL}

  

  planner:
    image: planner:latest
    container_name: planner
    restart: always
    ports:
      - "5020:5020"
    env_file: .env
    build:
      context: ./mape/planner
      dockerfile: Dockerfile
    volumes:
      - ./mape/planner:/app
    depends_on:
      - influx
      - node-red
    environment:
      INFLUXDB_TOKEN: ${INFLUXDB_TOKEN}
      INFLUXDB_ORG: ${INFLUXDB_ORG}
      INFLUXDB_BUCKET: ${INFLUXDB_BUCKET}
      INFLUXDB_URL: ${INFLUXDB_URL}

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3010:3010"
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/logs:/var/log/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: adminpass
    depends_on:
      - influx




